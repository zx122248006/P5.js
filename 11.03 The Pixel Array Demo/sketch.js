function setup () {
  createCanvas(320, 240);
  // 部分屏幕是高分屏，需要使用修改像素密度的功能。才能是 loadPixels 正常使用
  pixelDensity(1)
}

function draw () {
  background(51);

  // 载入pixels()
  // p5.js的画布中，每一个像素点使用了4个值来表示，分别表示 R,G,B,Alpha 的值。
  loadPixels();

  // 则pixels[1]~pixels[4]可以改变第一个点的颜色。
  // pixels[1] = 255;
  // pixels[2] = 255;
  // pixels[3] = 255;
  // pixels[4] = 255;

  // 可以做其他的一些有趣的事情。
  // 将canvas中的所有点进行循环，首先需要对横轴(x)循环(或者是先循环(y)轴也可以)，然后再循环另一条轴
  // 然后修改每个4数组的值，例如
  for (let x = 0; x < width; x++) {
    for (let y = 0; y < height; y++) {
      let index = (x + y * width) * 4;
      //  x + y * 4 意思是有一个矩阵是5 * 6的如下
      //     00 01 02 03 04 05
      //   --------------------
      // 00 |00|01|02|03|04|05|
      //   --------------------
      // 01 |06|07|08|09|10|11|
      //   --------------------
      // 02 |12|13|14|15|XX|  |
      //   --------------------
      // 03 |  |  |  |  |  |  |
      //   --------------------
      // 04 |  |  |  |  |  |  |
      //   --------------------
      // 已只(x,y) =(4,2) 求这个点的数组开始的值 就是XX位置的起始值
      //  则需要用 y(2)乘宽度(6)得出是第几排的(一排一共有4*宽度个，一共有24个值) 再加上是第几个(x)，此时再乘4就可以得出XX位置的起始值
      //  XX 位置的起始值 为 (2 * 6 + 4 ) * 4 = 64
      //  所以XX 点的颜色表示为 
      // pixels[64] = 255;
      // pixels[65] = 255;
      // pixels[66] = 255;
      // pixels[67] = 255;

      pixels[index + 0] = x;
      pixels[index + 1] = map(mouseX,0,width,0,255,true);
      pixels[index + 2] = y;
      pixels[index + 3] = 255;
    }x
  }

  updatePixels()
}